{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\archd\\\\OneDrive\\\\Desktop\\\\gemini3\\\\gemini2\\\\frontend\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { careerAPI, tokenManager } from '../services/api';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  userSkills: '',\n  userExpertise: '',\n  aiResponse: null,\n  mockTest: null,\n  user: null,\n  isAuthenticated: false,\n  loading: false,\n  error: null\n};\n\n// Action types\nconst ActionTypes = {\n  SET_SKILLS: 'SET_SKILLS',\n  SET_EXPERTISE: 'SET_EXPERTISE',\n  SET_AI_RESPONSE: 'SET_AI_RESPONSE',\n  SET_MOCK_TEST: 'SET_MOCK_TEST',\n  SET_USER: 'SET_USER',\n  SET_AUTHENTICATED: 'SET_AUTHENTICATED',\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  CLEAR_DATA: 'CLEAR_DATA',\n  LOGOUT: 'LOGOUT',\n  UPDATE_USER_SKILLS: 'UPDATE_USER_SKILLS',\n  TRIGGER_REANALYSIS: 'TRIGGER_REANALYSIS'\n};\n\n// Reducer function\nconst appReducer = (state, action) => {\n  var _action$payload, _action$payload2, _action$payload$user, _action$payload$user2;\n  switch (action.type) {\n    case ActionTypes.SET_SKILLS:\n      return {\n        ...state,\n        userSkills: action.payload,\n        error: null\n      };\n    case ActionTypes.SET_EXPERTISE:\n      return {\n        ...state,\n        userExpertise: action.payload,\n        error: null\n      };\n    case ActionTypes.SET_AI_RESPONSE:\n      return {\n        ...state,\n        aiResponse: action.payload,\n        loading: false,\n        error: null\n      };\n    case ActionTypes.SET_MOCK_TEST:\n      return {\n        ...state,\n        mockTest: action.payload,\n        loading: false,\n        error: null\n      };\n    case ActionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: !!action.payload,\n        loading: false,\n        error: null,\n        // Update skills in context when user is updated\n        userSkills: ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.skills) || state.userSkills,\n        userExpertise: ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.expertise) || state.userExpertise\n      };\n    case ActionTypes.UPDATE_USER_SKILLS:\n      return {\n        ...state,\n        user: action.payload.user,\n        userSkills: ((_action$payload$user = action.payload.user) === null || _action$payload$user === void 0 ? void 0 : _action$payload$user.skills) || state.userSkills,\n        userExpertise: ((_action$payload$user2 = action.payload.user) === null || _action$payload$user2 === void 0 ? void 0 : _action$payload$user2.expertise) || state.userExpertise,\n        // Clear previous AI response to trigger re-analysis\n        aiResponse: null,\n        loading: false,\n        error: null\n      };\n    case ActionTypes.TRIGGER_REANALYSIS:\n      return {\n        ...state,\n        aiResponse: null,\n        loading: true,\n        error: null\n      };\n    case ActionTypes.SET_AUTHENTICATED:\n      return {\n        ...state,\n        isAuthenticated: action.payload,\n        loading: false,\n        error: null\n      };\n    case ActionTypes.LOGOUT:\n      return {\n        ...initialState\n      };\n    case ActionTypes.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n        error: null\n      };\n    case ActionTypes.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case ActionTypes.CLEAR_DATA:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AppContext = /*#__PURE__*/createContext();\n\n// Context provider component\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Initialize user on app start\n  useEffect(() => {\n    const initializeUser = async () => {\n      const token = tokenManager.getToken();\n      if (token) {\n        try {\n          const user = await careerAPI.getMe();\n          setUser(user);\n        } catch (error) {\n          console.error('Failed to get user:', error);\n          // Token might be expired, remove it\n          tokenManager.removeToken();\n        }\n      }\n    };\n    initializeUser();\n  }, []);\n\n  // Action creators\n  const setSkills = skills => {\n    dispatch({\n      type: ActionTypes.SET_SKILLS,\n      payload: skills\n    });\n  };\n  const setExpertise = expertise => {\n    dispatch({\n      type: ActionTypes.SET_EXPERTISE,\n      payload: expertise\n    });\n  };\n  const setAIResponse = response => {\n    dispatch({\n      type: ActionTypes.SET_AI_RESPONSE,\n      payload: response\n    });\n  };\n  const setMockTest = mockTest => {\n    dispatch({\n      type: ActionTypes.SET_MOCK_TEST,\n      payload: mockTest\n    });\n  };\n  const setUser = user => {\n    dispatch({\n      type: ActionTypes.SET_USER,\n      payload: user\n    });\n  };\n  const setAuthenticated = isAuthenticated => {\n    dispatch({\n      type: ActionTypes.SET_AUTHENTICATED,\n      payload: isAuthenticated\n    });\n  };\n  const logout = () => {\n    dispatch({\n      type: ActionTypes.LOGOUT\n    });\n  };\n  const setLoading = loading => {\n    dispatch({\n      type: ActionTypes.SET_LOADING,\n      payload: loading\n    });\n  };\n  const setError = error => {\n    dispatch({\n      type: ActionTypes.SET_ERROR,\n      payload: error\n    });\n  };\n  const clearData = () => {\n    dispatch({\n      type: ActionTypes.CLEAR_DATA\n    });\n  };\n\n  // New action for updating user skills from ChatBot\n  const updateUserSkills = user => {\n    dispatch({\n      type: ActionTypes.UPDATE_USER_SKILLS,\n      payload: {\n        user\n      }\n    });\n  };\n\n  // New action to trigger re-analysis when skills change\n  const triggerReanalysis = () => {\n    dispatch({\n      type: ActionTypes.TRIGGER_REANALYSIS\n    });\n  };\n\n  // Auto re-analyze when skills change significantly\n  const autoReanalyze = async (newSkills, newExpertise) => {\n    if (newSkills && newExpertise && (newSkills !== state.userSkills || newExpertise !== state.userExpertise)) {\n      try {\n        setLoading(true);\n        const response = await careerAPI.analyzeCareer(newSkills, newExpertise);\n        setAIResponse(response);\n        setSkills(newSkills);\n        setExpertise(newExpertise);\n      } catch (error) {\n        console.error('Auto re-analysis failed:', error);\n        setError(error.message || 'Failed to update analysis');\n      }\n    }\n  };\n  const value = {\n    ...state,\n    setSkills,\n    setExpertise,\n    setAIResponse,\n    setMockTest,\n    setUser,\n    setAuthenticated,\n    setLoading,\n    setError,\n    clearData,\n    logout,\n    updateUserSkills,\n    triggerReanalysis,\n    autoReanalyze\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the context\n_s(AppProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n};\n_s2(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AppContext;\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","careerAPI","tokenManager","jsxDEV","_jsxDEV","initialState","userSkills","userExpertise","aiResponse","mockTest","user","isAuthenticated","loading","error","ActionTypes","SET_SKILLS","SET_EXPERTISE","SET_AI_RESPONSE","SET_MOCK_TEST","SET_USER","SET_AUTHENTICATED","SET_LOADING","SET_ERROR","CLEAR_DATA","LOGOUT","UPDATE_USER_SKILLS","TRIGGER_REANALYSIS","appReducer","state","action","_action$payload","_action$payload2","_action$payload$user","_action$payload$user2","type","payload","skills","expertise","AppContext","AppProvider","children","_s","dispatch","initializeUser","token","getToken","getMe","setUser","console","removeToken","setSkills","setExpertise","setAIResponse","response","setMockTest","setAuthenticated","logout","setLoading","setError","clearData","updateUserSkills","triggerReanalysis","autoReanalyze","newSkills","newExpertise","analyzeCareer","message","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/archd/OneDrive/Desktop/gemini3/gemini2/frontend/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { careerAPI, tokenManager } from '../services/api';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  userSkills: '',\r\n  userExpertise: '',\r\n  aiResponse: null,\r\n  mockTest: null,\r\n  user: null,\r\n  isAuthenticated: false,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Action types\r\nconst ActionTypes = {\r\n  SET_SKILLS: 'SET_SKILLS',\r\n  SET_EXPERTISE: 'SET_EXPERTISE',\r\n  SET_AI_RESPONSE: 'SET_AI_RESPONSE',\r\n  SET_MOCK_TEST: 'SET_MOCK_TEST',\r\n  SET_USER: 'SET_USER',\r\n  SET_AUTHENTICATED: 'SET_AUTHENTICATED',\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_ERROR: 'SET_ERROR',\r\n  CLEAR_DATA: 'CLEAR_DATA',\r\n  LOGOUT: 'LOGOUT',\r\n  UPDATE_USER_SKILLS: 'UPDATE_USER_SKILLS',\r\n  TRIGGER_REANALYSIS: 'TRIGGER_REANALYSIS',\r\n};\r\n\r\n// Reducer function\r\nconst appReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_SKILLS:\r\n      return {\r\n        ...state,\r\n        userSkills: action.payload,\r\n        error: null,\r\n      };\r\n    case ActionTypes.SET_EXPERTISE:\r\n      return {\r\n        ...state,\r\n        userExpertise: action.payload,\r\n        error: null,\r\n      };\r\n    case ActionTypes.SET_AI_RESPONSE:\r\n      return {\r\n        ...state,\r\n        aiResponse: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case ActionTypes.SET_MOCK_TEST:\r\n      return {\r\n        ...state,\r\n        mockTest: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case ActionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: !!action.payload,\r\n        loading: false,\r\n        error: null,\r\n        // Update skills in context when user is updated\r\n        userSkills: action.payload?.skills || state.userSkills,\r\n        userExpertise: action.payload?.expertise || state.userExpertise,\r\n      };\r\n    case ActionTypes.UPDATE_USER_SKILLS:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        userSkills: action.payload.user?.skills || state.userSkills,\r\n        userExpertise: action.payload.user?.expertise || state.userExpertise,\r\n        // Clear previous AI response to trigger re-analysis\r\n        aiResponse: null,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case ActionTypes.TRIGGER_REANALYSIS:\r\n      return {\r\n        ...state,\r\n        aiResponse: null,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case ActionTypes.SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case ActionTypes.LOGOUT:\r\n      return {\r\n        ...initialState,\r\n      };\r\n    case ActionTypes.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n        error: null,\r\n      };\r\n    case ActionTypes.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.CLEAR_DATA:\r\n      return {\r\n        ...initialState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AppContext = createContext();\r\n\r\n// Context provider component\r\nexport const AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n  // Initialize user on app start\r\n  useEffect(() => {\r\n    const initializeUser = async () => {\r\n      const token = tokenManager.getToken();\r\n      if (token) {\r\n        try {\r\n          const user = await careerAPI.getMe();\r\n          setUser(user);\r\n        } catch (error) {\r\n          console.error('Failed to get user:', error);\r\n          // Token might be expired, remove it\r\n          tokenManager.removeToken();\r\n        }\r\n      }\r\n    };\r\n\r\n    initializeUser();\r\n  }, []);\r\n\r\n  // Action creators\r\n  const setSkills = (skills) => {\r\n    dispatch({ type: ActionTypes.SET_SKILLS, payload: skills });\r\n  };\r\n\r\n  const setExpertise = (expertise) => {\r\n    dispatch({ type: ActionTypes.SET_EXPERTISE, payload: expertise });\r\n  };\r\n\r\n  const setAIResponse = (response) => {\r\n    dispatch({ type: ActionTypes.SET_AI_RESPONSE, payload: response });\r\n  };\r\n\r\n  const setMockTest = (mockTest) => {\r\n    dispatch({ type: ActionTypes.SET_MOCK_TEST, payload: mockTest });\r\n  };\r\n\r\n  const setUser = (user) => {\r\n    dispatch({ type: ActionTypes.SET_USER, payload: user });\r\n  };\r\n\r\n  const setAuthenticated = (isAuthenticated) => {\r\n    dispatch({ type: ActionTypes.SET_AUTHENTICATED, payload: isAuthenticated });\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch({ type: ActionTypes.LOGOUT });\r\n  };\r\n\r\n  const setLoading = (loading) => {\r\n    dispatch({ type: ActionTypes.SET_LOADING, payload: loading });\r\n  };\r\n\r\n  const setError = (error) => {\r\n    dispatch({ type: ActionTypes.SET_ERROR, payload: error });\r\n  };\r\n\r\n  const clearData = () => {\r\n    dispatch({ type: ActionTypes.CLEAR_DATA });\r\n  };\r\n\r\n  // New action for updating user skills from ChatBot\r\n  const updateUserSkills = (user) => {\r\n    dispatch({ type: ActionTypes.UPDATE_USER_SKILLS, payload: { user } });\r\n  };\r\n\r\n  // New action to trigger re-analysis when skills change\r\n  const triggerReanalysis = () => {\r\n    dispatch({ type: ActionTypes.TRIGGER_REANALYSIS });\r\n  };\r\n\r\n  // Auto re-analyze when skills change significantly\r\n  const autoReanalyze = async (newSkills, newExpertise) => {\r\n    if (newSkills && newExpertise && (newSkills !== state.userSkills || newExpertise !== state.userExpertise)) {\r\n      try {\r\n        setLoading(true);\r\n        const response = await careerAPI.analyzeCareer(newSkills, newExpertise);\r\n        setAIResponse(response);\r\n        setSkills(newSkills);\r\n        setExpertise(newExpertise);\r\n      } catch (error) {\r\n        console.error('Auto re-analysis failed:', error);\r\n        setError(error.message || 'Failed to update analysis');\r\n      }\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    setSkills,\r\n    setExpertise,\r\n    setAIResponse,\r\n    setMockTest,\r\n    setUser,\r\n    setAuthenticated,\r\n    setLoading,\r\n    setError,\r\n    clearData,\r\n    logout,\r\n    updateUserSkills,\r\n    triggerReanalysis,\r\n    autoReanalyze,\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the context\r\nexport const useAppContext = () => {\r\n  const context = useContext(AppContext);\r\n  if (!context) {\r\n    throw new Error('useAppContext must be used within an AppProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AppContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
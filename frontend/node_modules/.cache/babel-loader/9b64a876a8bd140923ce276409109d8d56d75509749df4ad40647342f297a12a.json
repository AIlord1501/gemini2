{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\archd\\\\OneDrive\\\\Desktop\\\\gemini3\\\\gemini2\\\\frontend\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { careerAPI, tokenManager, getResources } from '../services/api';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  userSkills: '',\n  userExpertise: '',\n  aiResponse: null,\n  mockTest: null,\n  resources: {\n    youtube_courses: [],\n    articles: []\n  },\n  user: null,\n  isAuthenticated: false,\n  loading: false,\n  error: null\n};\n\n// Action types\nconst ActionTypes = {\n  SET_SKILLS: 'SET_SKILLS',\n  SET_EXPERTISE: 'SET_EXPERTISE',\n  SET_AI_RESPONSE: 'SET_AI_RESPONSE',\n  SET_MOCK_TEST: 'SET_MOCK_TEST',\n  SET_RESOURCES: 'SET_RESOURCES',\n  SET_USER: 'SET_USER',\n  SET_AUTHENTICATED: 'SET_AUTHENTICATED',\n  SET_LOADING: 'SET_LOADING',\n  SET_ERROR: 'SET_ERROR',\n  CLEAR_DATA: 'CLEAR_DATA',\n  LOGOUT: 'LOGOUT',\n  UPDATE_USER_SKILLS: 'UPDATE_USER_SKILLS',\n  TRIGGER_REANALYSIS: 'TRIGGER_REANALYSIS'\n};\n\n// Reducer function\nconst appReducer = (state, action) => {\n  var _action$payload, _action$payload2, _action$payload$user, _action$payload$user2;\n  switch (action.type) {\n    case ActionTypes.SET_SKILLS:\n      return {\n        ...state,\n        userSkills: action.payload,\n        error: null\n      };\n    case ActionTypes.SET_EXPERTISE:\n      return {\n        ...state,\n        userExpertise: action.payload,\n        error: null\n      };\n    case ActionTypes.SET_AI_RESPONSE:\n      return {\n        ...state,\n        aiResponse: action.payload,\n        loading: false,\n        error: null\n      };\n    case ActionTypes.SET_MOCK_TEST:\n      return {\n        ...state,\n        mockTest: action.payload,\n        loading: false,\n        error: null\n      };\n    case ActionTypes.SET_RESOURCES:\n      return {\n        ...state,\n        resources: action.payload,\n        loading: false,\n        error: null\n      };\n    case ActionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: !!action.payload,\n        loading: false,\n        error: null,\n        // Update skills in context when user is updated\n        userSkills: ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.skills) || state.userSkills,\n        userExpertise: ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.expertise) || state.userExpertise\n      };\n    case ActionTypes.UPDATE_USER_SKILLS:\n      return {\n        ...state,\n        user: action.payload.user,\n        userSkills: ((_action$payload$user = action.payload.user) === null || _action$payload$user === void 0 ? void 0 : _action$payload$user.skills) || state.userSkills,\n        userExpertise: ((_action$payload$user2 = action.payload.user) === null || _action$payload$user2 === void 0 ? void 0 : _action$payload$user2.expertise) || state.userExpertise,\n        // Clear previous AI response to trigger re-analysis\n        aiResponse: null,\n        // Set loading to indicate analysis is being updated\n        loading: true,\n        error: null\n      };\n    case ActionTypes.TRIGGER_REANALYSIS:\n      return {\n        ...state,\n        aiResponse: null,\n        loading: true,\n        error: null\n      };\n    case ActionTypes.SET_AUTHENTICATED:\n      return {\n        ...state,\n        isAuthenticated: action.payload,\n        loading: false,\n        error: null\n      };\n    case ActionTypes.LOGOUT:\n      return {\n        ...initialState\n      };\n    case ActionTypes.SET_LOADING:\n      return {\n        ...state,\n        loading: action.payload,\n        error: null\n      };\n    case ActionTypes.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case ActionTypes.CLEAR_DATA:\n      return {\n        ...initialState\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AppContext = /*#__PURE__*/createContext();\n\n// Context provider component\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  // Initialize user on app start\n  useEffect(() => {\n    const initializeUser = async () => {\n      const token = tokenManager.getToken();\n      if (token) {\n        try {\n          const user = await careerAPI.getMe();\n          setUser(user);\n        } catch (error) {\n          console.error('Failed to get user:', error);\n          // Token might be expired, remove it\n          tokenManager.removeToken();\n        }\n      }\n    };\n    initializeUser();\n  }, []);\n\n  // Action creators\n  const setSkills = skills => {\n    dispatch({\n      type: ActionTypes.SET_SKILLS,\n      payload: skills\n    });\n  };\n  const setExpertise = expertise => {\n    dispatch({\n      type: ActionTypes.SET_EXPERTISE,\n      payload: expertise\n    });\n  };\n  const setAIResponse = response => {\n    dispatch({\n      type: ActionTypes.SET_AI_RESPONSE,\n      payload: response\n    });\n  };\n  const setMockTest = mockTest => {\n    dispatch({\n      type: ActionTypes.SET_MOCK_TEST,\n      payload: mockTest\n    });\n  };\n  const setResources = resources => {\n    dispatch({\n      type: ActionTypes.SET_RESOURCES,\n      payload: resources\n    });\n  };\n  const setUser = user => {\n    dispatch({\n      type: ActionTypes.SET_USER,\n      payload: user\n    });\n  };\n  const setAuthenticated = isAuthenticated => {\n    dispatch({\n      type: ActionTypes.SET_AUTHENTICATED,\n      payload: isAuthenticated\n    });\n  };\n  const logout = () => {\n    dispatch({\n      type: ActionTypes.LOGOUT\n    });\n  };\n  const setLoading = loading => {\n    dispatch({\n      type: ActionTypes.SET_LOADING,\n      payload: loading\n    });\n  };\n  const setError = error => {\n    dispatch({\n      type: ActionTypes.SET_ERROR,\n      payload: error\n    });\n  };\n  const clearData = () => {\n    dispatch({\n      type: ActionTypes.CLEAR_DATA\n    });\n  };\n\n  // New action for updating user skills from ChatBot\n  const updateUserSkills = user => {\n    dispatch({\n      type: ActionTypes.UPDATE_USER_SKILLS,\n      payload: {\n        user\n      }\n    });\n  };\n\n  // New action to trigger re-analysis when skills change\n  const triggerReanalysis = () => {\n    dispatch({\n      type: ActionTypes.TRIGGER_REANALYSIS\n    });\n  };\n\n  // Auto re-analyze when skills change significantly\n  const autoReanalyze = async (newSkills, newExpertise) => {\n    if (!newSkills || !newExpertise) {\n      console.warn('Missing skills or expertise for auto re-analysis');\n      return;\n    }\n    try {\n      var _response$career_path, _response$roadmap, _response$courses;\n      console.log('AppContext: Starting auto re-analysis with skills:', newSkills);\n      setLoading(true);\n      const response = await careerAPI.analyzeCareer(newSkills, newExpertise);\n\n      // Update all relevant state\n      setAIResponse(response);\n      setSkills(newSkills);\n      setExpertise(newExpertise);\n      console.log('AppContext: Auto re-analysis completed successfully');\n      console.log('Updated career paths:', ((_response$career_path = response.career_paths) === null || _response$career_path === void 0 ? void 0 : _response$career_path.length) || 0);\n      console.log('Updated roadmap steps:', ((_response$roadmap = response.roadmap) === null || _response$roadmap === void 0 ? void 0 : _response$roadmap.length) || 0);\n      console.log('Updated courses:', ((_response$courses = response.courses) === null || _response$courses === void 0 ? void 0 : _response$courses.length) || 0);\n      return response;\n    } catch (error) {\n      console.error('AppContext: Auto re-analysis failed:', error);\n      setError(error.message || 'Failed to update career analysis');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Update resources based on current user skills and expertise\n  const updateResources = async (limit = 5) => {\n    const skills = state.userSkills || 'General Technology';\n    const expertise = state.userExpertise || 'beginner';\n    if (!skills) {\n      console.warn('No skills available for resource recommendations');\n      return;\n    }\n    try {\n      var _response$youtube_cou, _response$articles;\n      console.log('AppContext: Updating resources with skills:', skills, 'expertise:', expertise);\n      setLoading(true);\n      const response = await getResources({\n        skills,\n        expertise,\n        limit\n      });\n\n      // Update resources state\n      setResources({\n        youtube_courses: response.youtube_courses || [],\n        articles: response.articles || []\n      });\n      console.log('AppContext: Resources updated successfully');\n      console.log('YouTube courses:', ((_response$youtube_cou = response.youtube_courses) === null || _response$youtube_cou === void 0 ? void 0 : _response$youtube_cou.length) || 0);\n      console.log('Articles:', ((_response$articles = response.articles) === null || _response$articles === void 0 ? void 0 : _response$articles.length) || 0);\n      return response;\n    } catch (error) {\n      console.error('AppContext: Failed to update resources:', error);\n      setError(error.message || 'Failed to load learning resources');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const value = {\n    ...state,\n    setSkills,\n    setExpertise,\n    setAIResponse,\n    setMockTest,\n    setResources,\n    setUser,\n    setAuthenticated,\n    setLoading,\n    setError,\n    clearData,\n    logout,\n    updateUserSkills,\n    triggerReanalysis,\n    autoReanalyze,\n    updateResources\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the context\n_s(AppProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AppProvider;\nexport const useAppContext = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useAppContext must be used within an AppProvider');\n  }\n  return context;\n};\n_s2(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AppContext;\n\n// Named export for compatibility\nexport { AppContext };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","careerAPI","tokenManager","getResources","jsxDEV","_jsxDEV","initialState","userSkills","userExpertise","aiResponse","mockTest","resources","youtube_courses","articles","user","isAuthenticated","loading","error","ActionTypes","SET_SKILLS","SET_EXPERTISE","SET_AI_RESPONSE","SET_MOCK_TEST","SET_RESOURCES","SET_USER","SET_AUTHENTICATED","SET_LOADING","SET_ERROR","CLEAR_DATA","LOGOUT","UPDATE_USER_SKILLS","TRIGGER_REANALYSIS","appReducer","state","action","_action$payload","_action$payload2","_action$payload$user","_action$payload$user2","type","payload","skills","expertise","AppContext","AppProvider","children","_s","dispatch","initializeUser","token","getToken","getMe","setUser","console","removeToken","setSkills","setExpertise","setAIResponse","response","setMockTest","setResources","setAuthenticated","logout","setLoading","setError","clearData","updateUserSkills","triggerReanalysis","autoReanalyze","newSkills","newExpertise","warn","_response$career_path","_response$roadmap","_response$courses","log","analyzeCareer","career_paths","length","roadmap","courses","message","updateResources","limit","_response$youtube_cou","_response$articles","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAppContext","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/archd/OneDrive/Desktop/gemini3/gemini2/frontend/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { careerAPI, tokenManager, getResources } from '../services/api';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  userSkills: '',\r\n  userExpertise: '',\r\n  aiResponse: null,\r\n  mockTest: null,\r\n  resources: { youtube_courses: [], articles: [] },\r\n  user: null,\r\n  isAuthenticated: false,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Action types\r\nconst ActionTypes = {\r\n  SET_SKILLS: 'SET_SKILLS',\r\n  SET_EXPERTISE: 'SET_EXPERTISE',\r\n  SET_AI_RESPONSE: 'SET_AI_RESPONSE',\r\n  SET_MOCK_TEST: 'SET_MOCK_TEST',\r\n  SET_RESOURCES: 'SET_RESOURCES',\r\n  SET_USER: 'SET_USER',\r\n  SET_AUTHENTICATED: 'SET_AUTHENTICATED',\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_ERROR: 'SET_ERROR',\r\n  CLEAR_DATA: 'CLEAR_DATA',\r\n  LOGOUT: 'LOGOUT',\r\n  UPDATE_USER_SKILLS: 'UPDATE_USER_SKILLS',\r\n  TRIGGER_REANALYSIS: 'TRIGGER_REANALYSIS',\r\n};\r\n\r\n// Reducer function\r\nconst appReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_SKILLS:\r\n      return {\r\n        ...state,\r\n        userSkills: action.payload,\r\n        error: null,\r\n      };\r\n    case ActionTypes.SET_EXPERTISE:\r\n      return {\r\n        ...state,\r\n        userExpertise: action.payload,\r\n        error: null,\r\n      };\r\n    case ActionTypes.SET_AI_RESPONSE:\r\n      return {\r\n        ...state,\r\n        aiResponse: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case ActionTypes.SET_MOCK_TEST:\r\n      return {\r\n        ...state,\r\n        mockTest: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case ActionTypes.SET_RESOURCES:\r\n      return {\r\n        ...state,\r\n        resources: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case ActionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: !!action.payload,\r\n        loading: false,\r\n        error: null,\r\n        // Update skills in context when user is updated\r\n        userSkills: action.payload?.skills || state.userSkills,\r\n        userExpertise: action.payload?.expertise || state.userExpertise,\r\n      };\r\n    case ActionTypes.UPDATE_USER_SKILLS:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        userSkills: action.payload.user?.skills || state.userSkills,\r\n        userExpertise: action.payload.user?.expertise || state.userExpertise,\r\n        // Clear previous AI response to trigger re-analysis\r\n        aiResponse: null,\r\n        // Set loading to indicate analysis is being updated\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case ActionTypes.TRIGGER_REANALYSIS:\r\n      return {\r\n        ...state,\r\n        aiResponse: null,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case ActionTypes.SET_AUTHENTICATED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case ActionTypes.LOGOUT:\r\n      return {\r\n        ...initialState,\r\n      };\r\n    case ActionTypes.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n        error: null,\r\n      };\r\n    case ActionTypes.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.CLEAR_DATA:\r\n      return {\r\n        ...initialState,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AppContext = createContext();\r\n\r\n// Context provider component\r\nexport const AppProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n  // Initialize user on app start\r\n  useEffect(() => {\r\n    const initializeUser = async () => {\r\n      const token = tokenManager.getToken();\r\n      if (token) {\r\n        try {\r\n          const user = await careerAPI.getMe();\r\n          setUser(user);\r\n        } catch (error) {\r\n          console.error('Failed to get user:', error);\r\n          // Token might be expired, remove it\r\n          tokenManager.removeToken();\r\n        }\r\n      }\r\n    };\r\n\r\n    initializeUser();\r\n  }, []);\r\n\r\n  // Action creators\r\n  const setSkills = (skills) => {\r\n    dispatch({ type: ActionTypes.SET_SKILLS, payload: skills });\r\n  };\r\n\r\n  const setExpertise = (expertise) => {\r\n    dispatch({ type: ActionTypes.SET_EXPERTISE, payload: expertise });\r\n  };\r\n\r\n  const setAIResponse = (response) => {\r\n    dispatch({ type: ActionTypes.SET_AI_RESPONSE, payload: response });\r\n  };\r\n\r\n  const setMockTest = (mockTest) => {\r\n    dispatch({ type: ActionTypes.SET_MOCK_TEST, payload: mockTest });\r\n  };\r\n\r\n  const setResources = (resources) => {\r\n    dispatch({ type: ActionTypes.SET_RESOURCES, payload: resources });\r\n  };\r\n\r\n  const setUser = (user) => {\r\n    dispatch({ type: ActionTypes.SET_USER, payload: user });\r\n  };\r\n\r\n  const setAuthenticated = (isAuthenticated) => {\r\n    dispatch({ type: ActionTypes.SET_AUTHENTICATED, payload: isAuthenticated });\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch({ type: ActionTypes.LOGOUT });\r\n  };\r\n\r\n  const setLoading = (loading) => {\r\n    dispatch({ type: ActionTypes.SET_LOADING, payload: loading });\r\n  };\r\n\r\n  const setError = (error) => {\r\n    dispatch({ type: ActionTypes.SET_ERROR, payload: error });\r\n  };\r\n\r\n  const clearData = () => {\r\n    dispatch({ type: ActionTypes.CLEAR_DATA });\r\n  };\r\n\r\n  // New action for updating user skills from ChatBot\r\n  const updateUserSkills = (user) => {\r\n    dispatch({ type: ActionTypes.UPDATE_USER_SKILLS, payload: { user } });\r\n  };\r\n\r\n  // New action to trigger re-analysis when skills change\r\n  const triggerReanalysis = () => {\r\n    dispatch({ type: ActionTypes.TRIGGER_REANALYSIS });\r\n  };\r\n\r\n  // Auto re-analyze when skills change significantly\r\n  const autoReanalyze = async (newSkills, newExpertise) => {\r\n    if (!newSkills || !newExpertise) {\r\n      console.warn('Missing skills or expertise for auto re-analysis');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log('AppContext: Starting auto re-analysis with skills:', newSkills);\r\n      setLoading(true);\r\n      \r\n      const response = await careerAPI.analyzeCareer(newSkills, newExpertise);\r\n      \r\n      // Update all relevant state\r\n      setAIResponse(response);\r\n      setSkills(newSkills);\r\n      setExpertise(newExpertise);\r\n      \r\n      console.log('AppContext: Auto re-analysis completed successfully');\r\n      console.log('Updated career paths:', response.career_paths?.length || 0);\r\n      console.log('Updated roadmap steps:', response.roadmap?.length || 0);\r\n      console.log('Updated courses:', response.courses?.length || 0);\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      console.error('AppContext: Auto re-analysis failed:', error);\r\n      setError(error.message || 'Failed to update career analysis');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Update resources based on current user skills and expertise\r\n  const updateResources = async (limit = 5) => {\r\n    const skills = state.userSkills || 'General Technology';\r\n    const expertise = state.userExpertise || 'beginner';\r\n    \r\n    if (!skills) {\r\n      console.warn('No skills available for resource recommendations');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      console.log('AppContext: Updating resources with skills:', skills, 'expertise:', expertise);\r\n      setLoading(true);\r\n      \r\n      const response = await getResources({\r\n        skills,\r\n        expertise,\r\n        limit\r\n      });\r\n      \r\n      // Update resources state\r\n      setResources({\r\n        youtube_courses: response.youtube_courses || [],\r\n        articles: response.articles || []\r\n      });\r\n      \r\n      console.log('AppContext: Resources updated successfully');\r\n      console.log('YouTube courses:', response.youtube_courses?.length || 0);\r\n      console.log('Articles:', response.articles?.length || 0);\r\n      \r\n      return response;\r\n    } catch (error) {\r\n      console.error('AppContext: Failed to update resources:', error);\r\n      setError(error.message || 'Failed to load learning resources');\r\n      throw error;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    setSkills,\r\n    setExpertise,\r\n    setAIResponse,\r\n    setMockTest,\r\n    setResources,\r\n    setUser,\r\n    setAuthenticated,\r\n    setLoading,\r\n    setError,\r\n    clearData,\r\n    logout,\r\n    updateUserSkills,\r\n    triggerReanalysis,\r\n    autoReanalyze,\r\n    updateResources,\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the context\r\nexport const useAppContext = () => {\r\n  const context = useContext(AppContext);\r\n  if (!context) {\r\n    throw new Error('useAppContext must be used within an AppProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AppContext;\r\n\r\n// Named export for compatibility\r\nexport { AppContext };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}